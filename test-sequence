SELECT 'Simple string';
SELECT value_to_yaml('Simple string');
SELECT yaml_debug_value_to_yaml('Simple string');
SELECT value_to_yaml(42);
SELECT yaml_debug_value_to_yaml(42);
SELECT value_to_yaml(TRUE);
SELECT yaml_debug_value_to_yaml(TRUE);
SELECT value_to_yaml(NULL);
SELECT yaml_debug_value_to_yaml(NULL);
SELECT value_to_yaml([]);
SELECT yaml_debug_value_to_yaml([]);
SELECT value_to_yaml([1, 2, 3]);
SELECT yaml_debug_value_to_yaml([1, 2, 3]);
SELECT value_to_yaml([1, 'text', TRUE]);
SELECT yaml_debug_value_to_yaml([1, 'text', TRUE]);
SELECT value_to_yaml({});
SELECT yaml_debug_value_to_yaml({});
SELECT value_to_yaml({'name': 'John', 'age': 30});
SELECT yaml_debug_value_to_yaml({'name': 'John', 'age': 30});
SELECT value_to_yaml({'name': 'John', 'active': TRUE, 'score': 85.5});
SELECT yaml_debug_value_to_yaml({'name': 'John', 'active': TRUE, 'score': 85.5});
SELECT value_to_yaml([{'name': 'John'}]);
SELECT yaml_debug_value_to_yaml([{'name': 'John'}]);
SELECT value_to_yaml({'numbers': [1, 2, 3]});
SELECT yaml_debug_value_to_yaml({'numbers': [1, 2, 3]});
SELECT value_to_yaml([{'id': 1}, {'id': 2}]);
SELECT yaml_debug_value_to_yaml([{'id': 1}, {'id': 2}]);
SELECT value_to_yaml({'user': {'name': 'John', 'age': 30}});
SELECT yaml_debug_value_to_yaml({'user': {'name': 'John', 'age': 30}});
SELECT value_to_yaml({'users': [{'id': 1}, {'id': 2}]});
SELECT yaml_debug_value_to_yaml({'users': [{'id': 1}, {'id': 2}]});
SELECT value_to_yaml({'a': {'b': {'c': 'value'}}});
SELECT yaml_debug_value_to_yaml({'a': {'b': {'c': 'value'}}});
SELECT value_to_yaml([1, [2, [3, 4]]]);
SELECT yaml_debug_value_to_yaml([1, [2, [3, 4]]]);
SELECT value_to_yaml({'items': [{'id': 1}, {'id': 2}]});
SELECT yaml_debug_value_to_yaml({'items': [{'id': 1}, {'id': 2}]});
SELECT value_to_yaml({'users': [{'name': 'John', 'roles': ['admin', 'user']}, {'name': 'Jane', 'roles': ['user']}]});
SELECT yaml_debug_value_to_yaml({'users': [{'name': 'John', 'roles': ['admin', 'user']}, {'name': 'Jane', 'roles': ['user']}]});
SELECT value_to_yaml({'key with spaces': 'value', 'special!@#': 123});
SELECT yaml_debug_value_to_yaml({'key with spaces': 'value', 'special!@#': 123});
SELECT value_to_yaml('String with: special {yaml} [characters]');
SELECT yaml_debug_value_to_yaml('String with: special {yaml} [characters]');
SELECT value_to_yaml('Very long string ' || repeat('x', 20));
SELECT yaml_debug_value_to_yaml('Very long string ' || repeat('x', 20));
SELECT value_to_yaml({'a': {'b': {'c': {'d': {'e': 'deep'}}}}});
SELECT yaml_debug_value_to_yaml({'a': {'b': {'c': {'d': {'e': 'deep'}}}}});
SELECT value_to_yaml([1, [2, [3, [4, [5]]]]]);
SELECT yaml_debug_value_to_yaml([1, [2, [3, [4, [5]]]]]);
WITH RECURSIVE numbers AS (SELECT 1 as n UNION ALL SELECT n + 1 FROM numbers WHERE n < 10) SELECT value_to_yaml(LIST(n)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n UNION ALL SELECT n + 1 FROM numbers WHERE n < 10) SELECT yaml_debug_value_to_yaml(LIST(n)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n, 'value' || 1 as v UNION ALL SELECT n + 1, 'value' || (n + 1) FROM numbers WHERE n < 10) SELECT value_to_yaml(MAP(n::VARCHAR, v)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n, 'value' || 1 as v UNION ALL SELECT n + 1, 'value' || (n + 1) FROM numbers WHERE n < 10) SELECT yaml_debug_value_to_yaml(MAP(n::VARCHAR, v)) FROM numbers LIMIT 1;
SELECT value_to_yaml({'metadata': {'version': 2.0, 'is_valid': true}, 'users': [{'id': 1, 'name': 'User 1', 'tags': ['active', 'premium']}, {'id': 2, 'name': 'User 2', 'tags': ['inactive']}], 'settings': {'permissions': {'read': ['user', 'admin'], 'write': ['admin'], 'execute': []}, 'limits': {'max_connections': 100, 'timeout': 30, 'nested': {'level1': {'level2': {'level3': 'deep value'}}}}}});
SELECT yaml_debug_value_to_yaml({'metadata': {'version': 2.0, 'is_valid': true}, 'users': [{'id': 1, 'name': 'User 1', 'tags': ['active', 'premium']}, {'id': 2, 'name': 'User 2', 'tags': ['inactive']}], 'settings': {'permissions': {'read': ['user', 'admin'], 'write': ['admin'], 'execute': []}, 'limits': {'max_connections': 100, 'timeout': 30, 'nested': {'level1': {'level2': {'level3': 'deep value'}}}}}});
SELECT value_to_yaml([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]);
SELECT yaml_debug_value_to_yaml([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]);
SELECT value_to_yaml([1, [2, [3, [4, [5, [6, [7, [8, [9, [10, [11, [12, [13, [14, [15]]]]]]]]]]]]]]);
SELECT yaml_debug_value_to_yaml([1, [2, [3, [4, [5, [6, [7, [8, [9, [10, [11, [12, [13, [14, [15]]]]]]]]]]]]]]);
SELECT value_to_yaml({'a':{'b':{'c':{'d':{'e':{'f':{'g':{'h':{'i':{'j':{'k':{'l':{'m':{'n':{'o':'deep'}}}}}}}}}}}}}}});
SELECT yaml_debug_value_to_yaml({'a':{'b':{'c':{'d':{'e':{'f':{'g':{'h':{'i':{'j':{'k':{'l':{'m':{'n':{'o':'deep'}}}}}}}}}}}}}}});
SELECT value_to_yaml({'level1': {'array': [1, 2, 3], 'level2': {'map': {'a': 1, 'b': 2}, 'level3': {'mixed': [{'x': 1}, {'y': [2, 3]}, {'z': {'deep': true}}], 'level4': {'deep_array': [[1, [2, [3, [4, [5]]]]], {'maps': [{'in': {'arrays': [1, 2, {'more': {'nesting': 'value'}}]}}]}]}}}}});
SELECT yaml_debug_value_to_yaml({'level1': {'array': [1, 2, 3], 'level2': {'map': {'a': 1, 'b': 2}, 'level3': {'mixed': [{'x': 1}, {'y': [2, 3]}, {'z': {'deep': true}}], 'level4': {'deep_array': [[1, [2, [3, [4, [5]]]]], {'maps': [{'in': {'arrays': [1, 2, {'more': {'nesting': 'value'}}]}}]}]}}}}});
WITH RECURSIVE numbers AS (SELECT 1 as n UNION ALL SELECT n + 1 FROM numbers WHERE n < 100) SELECT value_to_yaml(LIST(n)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n UNION ALL SELECT n + 1 FROM numbers WHERE n < 100) SELECT yaml_debug_value_to_yaml(LIST(n)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n, 'value' || 1 as v UNION ALL SELECT n + 1, 'value' || (n + 1) FROM numbers WHERE n < 100) SELECT value_to_yaml(MAP(n::VARCHAR, v)) FROM numbers LIMIT 1;
WITH RECURSIVE numbers AS (SELECT 1 as n, 'value' || 1 as v UNION ALL SELECT n + 1, 'value' || (n + 1) FROM numbers WHERE n < 100) SELECT yaml_debug_value_to_yaml(MAP(n::VARCHAR, v)) FROM numbers LIMIT 1;